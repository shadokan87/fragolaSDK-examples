import type { AgentContext } from "../../agent";
import type { ChatCompletionAssistantMessageParam } from "../../fragola";
import type { maybePromise, StoreLike } from "../../types";
import type { registeredEvent } from "./EventMap";
export type HandleAiMessage = (message: ChatCompletionAssistantMessageParam, isPartial: boolean) => maybePromise<ChatCompletionAssistantMessageParam>;
export declare const defaultHandleAiMessage: HandleAiMessage;
export declare function createHandleAiMessage<TGlobalStore extends StoreLike<any> = {}, TStore extends StoreLike<any> = {}>(events: registeredEvent<"aiMessage", any, TGlobalStore, TStore>[], getContext: () => AgentContext<any>): HandleAiMessage;

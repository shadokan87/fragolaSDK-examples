import type { AgentContext } from "../../agent";
import type { ChatCompletionUserMessageParam } from "../../fragola";
import type { StoreLike } from "../../types";
import type { registeredEvent } from "./EventMap";
export type HandleUserMessage = (_message: Omit<ChatCompletionUserMessageParam, "role">) => Promise<typeof _message>;
export declare function createHandleUserMessage<TGlobalStore extends StoreLike<any> = {}, TStore extends StoreLike<any> = {}>(events: registeredEvent<"userMessage", any, TGlobalStore, TStore>[], getContext: () => AgentContext<any>): HandleUserMessage;

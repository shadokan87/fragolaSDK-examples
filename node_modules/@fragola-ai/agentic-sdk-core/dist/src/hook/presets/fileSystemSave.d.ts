import type { FragolaHook } from "../";
/**
 * Hook that automatically saves the conversation to the file system after each update.
 *
 * The file is saved with a filename based on the first user message content. When there are conflicting
 * filenames, it will create a nonce to ensure uniqueness. e.g `<label>.json/<label>-<nonce>.json`
 *
 * @param path - The directory path where conversation files will be saved
 * @returns A hook that saves conversations as JSON files
 *
 * @example
 * ```typescript
 * import { fileSystemSave } from "@fragola-ai/agentic-sdk-core/hook/presets";
 * import { Fragola } from "@fragola-ai/agentic-sdk-core";
 *
 * const fragola = new Fragola({ ... });
 *
 * const agent = fragola.agent({
 *     name: "assistant",
 *     instructions: "you are a helpful assistant",
 *     modelSettings: {
 *         model: "gpt-oss-120b"
 *     }
 * }).use(fileSystemSave("./testHook"));
 *
 * await agent.userMessage({content: "say hello"});
 * // Creates: ./testHook/say hello.json
 *
 * await agent.userMessage({content: "say hello again"});
 * // Updates: ./testHook/say hello.json (same file, full conversation)
 * ```
 */
export declare const fileSystemSave: (path: string) => FragolaHook;
